#pragma once#include <LView.h>#ifdef KH_#include <LPeriodical.h>#endif#include "CommActiveScroller.h"#include "g42itype.h"#include "g42image.h"#include "g42sview.h"#include "CommMac.h"class CommProHandler;#ifdef KH_class LFile;#endifconst PowerPlant_Scrollbar_Size = 16;class CommImageView : public LView, public LPeriodical{public: 						CommImageView (LStream *inStream); 	virtual			 	~CommImageView ();	virtual Boolean		SetImage (LCommander *commander, G42Image *image,							G42SingleImageViewer *singleViewer);	void				Print (void);	void				SetZoom (float zoom);	#ifdef USE_THREADS	static void			CallBack (void);	#endif	static LWindow 		*GetWindowFromView (LView *view);	G42Image			*GetImage (void);	G42SingleImageViewer *GetImageViewer (void);	void 				ClickSelf (const SMouseDownEvent &inMouseDown);	virtual void 		AdjustCursorSelf (Point inPortPt, const EventRecord &inMacEvent);	// 	NEED SetModified() / IsModified() [from LSingleDoc]	virtual	void		SpendTime (const EventRecord &inMacEvent);	virtual Boolean		ClickTimesAreClose (Uint32 inLastClickTime);	static short		sWindowBorder;protected:	virtual void		DrawSelf (void);	void 				DeActivateSelf (void);	void 				ResizeFrameBy (Int16 inWidthDelta, Int16 inHeightDelta, Boolean inRefresh);	void  				FinishCreateSelf (void);	GWorldPtr			DisplayGWorld;	// Visible portion of GImage maintained by GImage for display	FSSpec				FileSpec;	bool				PaletteSet;	LFile 				*ImageFile;	// File object for image	G42Image			*GImage;	// Image object [G42Image]	G42SingleImageViewer *SingleImageView;	LWindow 			*Window;	float				Zoom;	CommActiveScroller		*Scroller;	#if 0	bool				WaitCursor;	#endif	short				LastCursorX;	short				LastCursorY;	LCommander			*Commander;private:	long				LastClickTime;	short				ClickCount;};